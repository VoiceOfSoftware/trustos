{
	"info": {
		"_postman_id": "1d8dd7cc-e1ae-4d7d-915d-759e7dc8d03d",
		"name": "Cert API",
		"description": " **#Certification**  \n\n---\n\n  Cert API is used to create and verify **digital certificates** on the blockchain. A certificate is a tamper-proof and verifiable amount of data that represents a process, a file/document or anything else and that is handled by a Smart Contract. Through this API different type of certificates can be easily created, recorded and signed by the involved parties as a verifiable certificate. \n \n Take a look at the [**documentation**](https://trustos.readthedocs.io/en/latest/cert.html) and in case you have some questions or need more detailed information about the use of this API, don't hesitate to contact with the blockchain team:\n\nContact Support:\n Name: Blockchain Team\n Email: soporte-bteam@telefonica.com",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Login",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Execution",
									"",
									"try {",
									"    tests[\"Status code is 200\"] = responseCode.code === 200;",
									"    var jsonData = JSON.parse(responseBody);",
									"    pm.collectionVariables.set(\"authToken\", jsonData.message);",
									"    postman.setEnvironmentVariable(\"authToken\", jsonData.message);",
									"}",
									"catch(e) {",
									"    console.error(e);",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\": \"did:vtn:trustid:b596e6d0082e035594f3be51b4ea3aed2518ab39d131ba573f96e8cabb9c814d\",\n\t\"password\": \"test\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/login",
							"host": [
								"{{URL}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"did:vtn:trustid:a998f37f73186dd381c4476d0e56059eed31437d06f2e860780108e8684df445\",\n    \"password\": \"test\"\n}"
								},
								"url": {
									"raw": "{{URL}}/login",
									"host": [
										"{{URL}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"eyJ0iXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyIjoidGVzdCIsImV4cCI6MTU2OTkyNDg3NH0.G6ri56bF7m8Rs68n1IWE2DbfZKPGiVp-lXWzz23NUDo\"\n}"
						}
					]
				},
				{
					"name": "Refresh the login session",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/refresh",
							"host": [
								"{{URL}}"
							],
							"path": [
								"refresh"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{URL}}/refresh",
									"host": [
										"{{URL}}"
									],
									"path": [
										"refresh"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"eyJ0iXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyIjoidGVzdCIsImV4cCI6MTU2OTkyNDg3NH0.G6ri56bF7m8Rs68n1IWE2DbfZKPGiVp-lXWzz23NUDo\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Certificate",
			"item": [
				{
					"name": "Create a new certificate from customised content",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Cert\",\n    \"description\": \"first certificate\",\n    \"content\": {},\n    \"public\": false,\n    \"readers\": [\"did:vtn:reader1\", \"did:vtn:reader2\"],\n    \"signers\": [\"did:vtn:signer1\", \"did:vtn:signer2\"]\n}"
						},
						"url": {
							"raw": "{{URL}}/certificate/content/create",
							"host": [
								"{{URL}}"
							],
							"path": [
								"certificate",
								"content",
								"create"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Certificate name\",\n    \"description\": \"Certificate short description\",\n    \"content\": \"<object>\",\n    \"public\": \"<bool>\",\n    \"readers\": \"<string>\",\n    \"signers\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{URL}}/certificate/content/create",
									"host": [
										"{{URL}}"
									],
									"path": [
										"certificate",
										"content",
										"create"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\r\n  \"output\": {\r\n    \"certID\": \"cert_1\",\r\n    \"data\": {\r\n      \"badge\": {\r\n        \"name\": \"\",\r\n        \"description\": \"\",\r\n        \"type\": \"cert_1\",\r\n        \"content\": {}\r\n      },\r\n      \"issuedOn\": \"2025-12-31T23:59:59+00:00\",\r\n      \"expires\": \"\",\r\n      \"verification\": {},\r\n      \"hash\": \"Bs2nFa30Ghu84uwBnjs2aOi53qe6r6YTpjk+o/HB2c=\"\r\n    },\r\n    \"metadata\": [\r\n      {\r\n        \"certID\": \"cert_1\",\r\n        \"type\": \"Signature/Revocation/Evidence\",\r\n        \"signatures\": {},\r\n        \"public_evidences\": {},\r\n        \"revoked\": false,\r\n        \"datetime\": \"1592568489\",\r\n        \"hfTxId\": \"3ae1d6b0f914aee4ce7105ddd65c4cf2dcf160ca398297a13032aaf33b50ed291\",\r\n        \"hash\": \"Ni7JYQG6GSmlEjWoRj2xrfF6ZVFhqBDPzyjk+o/HB2c=\"\r\n      }\r\n    ],\r\n    \"access\": {}\r\n  }\r\n}"
						}
					]
				},
				{
					"name": "Create a new certificate from an asset",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Cert\",\n  \"description\": \"second certificate\",\n  \"assetID\": \"\",\n  \"init\": \"1533333333\",\n  \"end\": \"1616666666\",\n  \"public\": false,\n  \"readers\": [\n    \"did:vtn:reader1\",\n    \"did:vtn:reader2\"\n  ],\n  \"signers\": [\n    \"did:vtn:signer1\",\n    \"did:vtn:signer2\"\n  ]\n}"
						},
						"url": {
							"raw": "{{URL}}/certificate/asset/create",
							"host": [
								"{{URL}}"
							],
							"path": [
								"certificate",
								"asset",
								"create"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Certificate name\",\n    \"description\": \"Certificate short description\",\n    \"assetID\": \"example1\",\n    \"public\": \"<bool>\",\n    \"readers\": \"<string>\",\n    \"signers\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{URL}}/certificate/asset/create",
									"host": [
										"{{URL}}"
									],
									"path": [
										"certificate",
										"asset",
										"create"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\r\n  \"output\": {\r\n    \"certID\": \"cert_1\",\r\n    \"data\": {\r\n      \"badge\": {\r\n        \"name\": \"\",\r\n        \"description\": \"\",\r\n        \"type\": \"cert_1\",\r\n        \"content\": {}\r\n      },\r\n      \"issuedOn\": \"2025-12-31T23:59:59+00:00\",\r\n      \"expires\": \"\",\r\n      \"verification\": {},\r\n      \"hash\": \"Bs2nFa30Ghu84uwBnjs2aOi53qe6r6YTpjk+o/HB2c=\"\r\n    },\r\n    \"metadata\": [\r\n      {\r\n        \"certID\": \"cert_1\",\r\n        \"type\": \"Signature/Revocation/Evidence\",\r\n        \"signatures\": {},\r\n        \"public_evidences\": {},\r\n        \"revoked\": false,\r\n        \"datetime\": \"1592568489\",\r\n        \"hfTxId\": \"3ae1d6b0f914aee4ce7105ddd65c4cf2dcf160ca398297a13032aaf33b50ed291\",\r\n        \"hash\": \"Ni7JYQG6GSmlEjWoRj2xrfF6ZVFhqBDPzyjk+o/HB2c=\"\r\n      }\r\n    ],\r\n    \"access\": {}\r\n  }\r\n}"
						}
					]
				},
				{
					"name": "Create a new hash from file",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "fileInput",
									"contentType": "multipart/form-data",
									"type": "file",
									"src": "/C:/Users/rtx10334/OneDrive - Telefonica/Pictures/PruebaCar/3.jpeg"
								}
							]
						},
						"url": {
							"raw": "{{URL}}/certificate/file/hash",
							"host": [
								"{{URL}}"
							],
							"path": [
								"certificate",
								"file",
								"hash"
							],
							"query": [
								{
									"key": "",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Certificate name\",\n    \"description\": \"Certificate short description\",\n    \"assetID\": \"example1\",\n    \"public\": \"<bool>\",\n    \"readers\": \"<string>\",\n    \"signers\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{URL}}/certificate/asset/create",
									"host": [
										"{{URL}}"
									],
									"path": [
										"certificate",
										"asset",
										"create"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"output\": {\r\n        \"file_hash\": \"42605e60ee6fcf01dcea6332fbe6101a4eff97d03bba61462f0f6a15f86e3285\"\r\n    }\r\n}"
						}
					]
				},
				{
					"name": "Create a new certificate from file hash",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Cert\",\r\n  \"description\": \"\",\r\n  \"content\": {\r\n    \"file_hash\": \"pruebaFileHash\"\r\n  },\r\n  \"public\": false,\r\n  \"readers\": [\r\n    \"did:vtn:reader1\",\r\n    \"did:vtn:reader2\"\r\n  ],\r\n  \"signers\": [\r\n    \"did:vtn:signer1\",\r\n    \"did:vtn:signer2\"\r\n  ],\r\n  \"externalId\": \"1\"\r\n}"
						},
						"url": {
							"raw": "{{URL}}/certificate/file/create",
							"host": [
								"{{URL}}"
							],
							"path": [
								"certificate",
								"file",
								"create"
							],
							"query": [
								{
									"key": "",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Certificate name\",\n    \"description\": \"Certificate short description\",\n    \"assetID\": \"example1\",\n    \"public\": \"<bool>\",\n    \"readers\": \"<string>\",\n    \"signers\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/certificate/asset/create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificate",
										"asset",
										"create"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\r\n  \"output\": {\r\n    \"certID\": \"cert_1\",\r\n    \"data\": {\r\n      \"badge\": {\r\n        \"name\": \"\",\r\n        \"description\": \"\",\r\n        \"type\": \"cert_1\",\r\n        \"content\": {}\r\n      },\r\n      \"issuedOn\": \"2025-12-31T23:59:59+00:00\",\r\n      \"expires\": \"\",\r\n      \"verification\": {},\r\n      \"hash\": \"Bs2nFa30Ghu84uwBnjs2aOi53qe6r6YTpjk+o/HB2c=\"\r\n    },\r\n    \"metadata\": [\r\n      {\r\n        \"certID\": \"cert_1\",\r\n        \"type\": \"Signature/Revocation/Evidence\",\r\n        \"signatures\": {},\r\n        \"public_evidences\": {},\r\n        \"revoked\": false,\r\n        \"datetime\": \"1592568489\",\r\n        \"hfTxId\": \"3ae1d6b0f914aee4ce7105ddd65c4cf2dcf160ca398297a13032aaf33b50ed291\",\r\n        \"hash\": \"Ni7JYQG6GSmlEjWoRj2xrfF6ZVFhqBDPzyjk+o/HB2c=\"\r\n      }\r\n    ],\r\n    \"access\": {}\r\n  }\r\n}"
						}
					]
				},
				{
					"name": "Get the current certificate information",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/certificate/:certID",
							"host": [
								"{{URL}}"
							],
							"path": [
								"certificate",
								":certID"
							],
							"query": [
								{
									"key": null,
									"value": "",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "certID",
									"value": "prueba",
									"description": "(Required) Certificate ID"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{URL}}/certificate/:certID",
									"host": [
										"{{URL}}"
									],
									"path": [
										"certificate",
										":certID"
									],
									"variable": [
										{
											"key": "certID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\r\n  \"output\": {\r\n    \"certID\": \"cert_1\",\r\n    \"data\": {\r\n      \"badge\": {\r\n        \"name\": \"\",\r\n        \"description\": \"\",\r\n        \"type\": \"cert_1\",\r\n        \"content\": {}\r\n      },\r\n      \"issuedOn\": \"2025-12-31T23:59:59+00:00\",\r\n      \"expires\": \"\",\r\n      \"verification\": {},\r\n      \"hash\": \"Bs2nFa30Ghu84uwBnjs2aOi53qe6r6YTpjk+o/HB2c=\"\r\n    },\r\n    \"metadata\": [\r\n      {\r\n        \"certID\": \"cert_1\",\r\n        \"type\": \"Signature/Revocation/Evidence\",\r\n        \"signatures\": {},\r\n        \"public_evidences\": {},\r\n        \"revoked\": false,\r\n        \"datetime\": \"1592568489\",\r\n        \"hfTxId\": \"3ae1d6b0f914aee4ce7105ddd65c4cf2dcf160ca398297a13032aaf33b50ed291\",\r\n        \"hash\": \"Ni7JYQG6GSmlEjWoRj2xrfF6ZVFhqBDPzyjk+o/HB2c=\"\r\n      }\r\n    ],\r\n    \"access\": {}\r\n  }\r\n}"
						}
					]
				},
				{
					"name": "Sign a certificate",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{URL}}/certificate/:certID/sign",
							"host": [
								"{{URL}}"
							],
							"path": [
								"certificate",
								":certID",
								"sign"
							],
							"variable": [
								{
									"key": "certID",
									"value": "prueba",
									"description": "(Required) Certificate ID"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/certificate/:certID/sign",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificate",
										":certID",
										"sign"
									],
									"variable": [
										{
											"key": "certID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"output\": {\n  \"signature\": \"yJjdHkiOiJqd2sranNvbiIsImFsZyI6IlJTMjU2IiwiacxX0NJUzZudXhvRWYwZGxRVG5JdjJJTSJ9.eyJwYXlsb2Fb24iOiJDZXJ0aWZpY2F0ZSBzaG9ydCBkZXNjcmlwdGlvbiIsImlzc3VlciI6ImRpZDp2dG46dHJ1c3RpZDpkNzNkYTUxNzNiOWZkYjZiMDEyOGNiODBhNTRhMmEwMTZkYTY1YzJkYTRmYWRkZmFlN2UxZDE5MzcwOWM0MjlmIiwibmFtZSI6IkNlcnRpZmljYXRlIG5hbWUiLCJ0eXBlIjoiZmlsZSJ9LCJjZXJ0SUQiOiJhM2ExIiwiZXhwaXJlcyI6IjIwMjUtMTItMzFUMjM6NTk6NTkrMDA6MFBditId1c3K2FqY0JkNXJIdXU2MD0iLCJpc3N1ZWRPbiI6IjIwMjAtMTEtMTIgMDg6NDU6NDMgKzAwMDAgVVRDIiwidmVyaWZpY2F0aW9uIjp7InNpZ25lcnMiOlsiZGlkOnZ0bjpzaWduZXIxIiwiZGlkOnZ0bjpzaWduZXIyJ9fX0.EHihtUXTWtHUsRjdGhoQEP9BTpo92KjTReBBwMMXty1moVM09pa-btd3XkPf6wBI-ZdP-a96TVCBua_XkYYMIy4WOmwqhRkdG93Sdsb7EBxWTjT7nZeTKg\",\n  \"signer\": {\n   \"id\": \"did:vtn:trustid:signer1\",\n   \"publicKey\": \"-----BEGIN PUBLIC KEY----- .... -----END PUBLIC KEY-----\",\n   \"controller\": \"did:vtn:trustid:controller\",\n   \"type\": \"SignedBadge\"\n  }\n }\n}"
						}
					]
				},
				{
					"name": "Sign a certificate with external key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"signature\": \"eyJSosd289ap389fa8uf3u8u4er8912rz....\",\n  \"publicKey\": \"-----BEGIN PUBLIC KEY----- .... -----END PUBLIC KEY-----\",\n  \"did\": \"did:external:test\"\n}"
						},
						"url": {
							"raw": "{{URL}}/certificate/:certID/sign/external",
							"host": [
								"{{URL}}"
							],
							"path": [
								"certificate",
								":certID",
								"sign",
								"external"
							],
							"variable": [
								{
									"key": "certID",
									"value": "prueba",
									"description": "(Required) Certificate ID"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"signature\": \"eyJSosd289ap389fa8uf3u8u4er8912rz....\",\n    \"publicKey\": \"-----BEGIN PUBLIC KEY----- .... -----END PUBLIC KEY-----\",\n    \"did\": \"did:external:test\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/certificate/:certID/sign/external",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificate",
										":certID",
										"sign",
										"external"
									],
									"variable": [
										{
											"key": "certID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"output\": {\n  \"signature\": \"yJjdHkiOiJqd2sranNvbiIsImFsZyI6IlJTMjU2IiwiacxX0NJUzZudXhvRWYwZGxRVG5JdjJJTSJ9.eyJwYXlsb2Fb24iOiJDZXJ0aWZpY2F0ZSBzaG9ydCBkZXNjcmlwdGlvbiIsImlzc3VlciI6ImRpZDp2dG46dHJ1c3RpZDpkNzNkYTUxNzNiOWZkYjZiMDEyOGNiODBhNTRhMmEwMTZkYTY1YzJkYTRmYWRkZmFlN2UxZDE5MzcwOWM0MjlmIiwibmFtZSI6IkNlcnRpZmljYXRlIG5hbWUiLCJ0eXBlIjoiZmlsZSJ9LCJjZXJ0SUQiOiJhM2ExIiwiZXhwaXJlcyI6IjIwMjUtMTItMzFUMjM6NTk6NTkrMDA6MFBditId1c3K2FqY0JkNXJIdXU2MD0iLCJpc3N1ZWRPbiI6IjIwMjAtMTEtMTIgMDg6NDU6NDMgKzAwMDAgVVRDIiwidmVyaWZpY2F0aW9uIjp7InNpZ25lcnMiOlsiZGlkOnZ0bjpzaWduZXIxIiwiZGlkOnZ0bjpzaWduZXIyJ9fX0.EHihtUXTWtHUsRjdGhoQEP9BTpo92KjTReBBwMMXty1moVM09pa-btd3XkPf6wBI-ZdP-a96TVCBua_XkYYMIy4WOmwqhRkdG93Sdsb7EBxWTjT7nZeTKg\",\n  \"signer\": {\n   \"id\": \"did:vtn:trustid:signer1\",\n   \"publicKey\": \"-----BEGIN PUBLIC KEY----- .... -----END PUBLIC KEY-----\",\n   \"controller\": \"did:vtn:trustid:controller\",\n   \"type\": \"SignedBadge\"\n  }\n }\n}"
						}
					]
				},
				{
					"name": "Revoke a certificate",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{URL}}/certificate/:certID/revoke",
							"host": [
								"{{URL}}"
							],
							"path": [
								"certificate",
								":certID",
								"revoke"
							],
							"variable": [
								{
									"key": "certID",
									"value": "prueba",
									"description": "(Required) Certificate ID"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/certificate/:certID/revoke",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificate",
										":certID",
										"revoke"
									],
									"variable": [
										{
											"key": "certID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\r\n  \"output\": {\r\n    \"type\": \"Revocation\",\r\n    \"verification\": {\r\n      \"signers\": [\r\n        \"did:vtn:signer1\",\r\n        \"did:vtn:signer2\"\r\n      ],\r\n      \"type\": \"SignedBadge\"\r\n    },\r\n    \"signatures\": {\r\n      \"did:vtn:trustid:103fe40f1f2ba7d82e1055cd6c4e54ba12ded63202aaddd7449b1a5c607a3fc4\": {\r\n        \"datetime\": \"2022-04-04 09:17:31 +0000 UTC\",\r\n        \"hfTxId\": \"e34f054ff2b724c81cbcfbd98e7f1181b346c755e8bd6769d7d1e14638ee3a8c\",\r\n        \"signature\": \"eyJjdHkiOiJqd2sranNvbiIsImFsZyI6IlJTMjU2Iiwia2lkIjoiRUxqVFN3cXJpNHp5dTVLLTBzWHF6N1JyOHZwUEhSS2ROZDY3X3VOb1dsUSJ9.eyJwYXlsb2FkIjp7ImJhZGdlIjp7ImNlcnRJRCI6ImRpZDp2dG46Y2hhbm5lbDE6Y2VydGlkOjFmNDkxOTc0MjkwOGIwMWExMDc2NDY1NTJiOThmMGM1N2NmZDc2MGE4YmFmNTE5MTJlYjliODdmYzgwYzJmYjQiLCJuYW1lIjoiUHJvYmFuZG8gY2VydGlmaWNhZG9zIiwiZGVzY3JpcHRpb24iOiJFc3RvIGVzIGxhIGRlc2NyaXBjacOzbiIsInR5cGUiOiJjb250ZW50IiwiY29udGVudCI6W3t9XSwiaXNzdWVyIjoiZGlkOnZ0bjp0cnVzdGlkOjEwM2ZlNDBmMWYyYmE3ZDgyZTEwNTVjZDZjNGU1NGJhMTJkZWQ2MzIwMmFhZGRkNzQ0OWIxYTVjNjA3YTNmYzQifSwiaXNzdWVkT24iOiIyMDIyLTAzLTIzIDA4OjUwOjMxICswMDAwIFVUQyIsImV4cGlyZXMiOiIiLCJoYXNoIjoiZmFBL3FSSUpXZ1d1enJnanBTQ3UrQ0NjaElFOVR1RzBNL0FvK0ZMWHR0QT0ifX0.Q3nZM-bvR1ThYyHdg7oeCTQA6FJIjOBpm-ZaM-JGe7N68ikZhJ9PqEhnxhZ4I8yhD7ekBgNGL3qD65RCJ2dNm-YSk4WVSBrMrClPiMVIUJKxQb6Yl5uS_5-KOUIJ2Ij0WhylGbjzg07vg5uD-g9QkUIxbZat4J3-paK08K4YHuP1YR2EgF5Wq8fV3p97rI2VIzRHLZjNxl8mGVi_R2AUFbpJXDsnuGZwuVpQsWXHjHH3Z16kalh5kf8U9ptagbGnqf4xBIilBWWQfKmigaDDRX4NhDxU10GYiOI1tqph1fhkO37QjKnzntJfs3mdow4Pc-T804AA2Eds8GkZyoYy_w\",\r\n        \"signer\": {\r\n          \"controller\": \"did:vtn:trustid:103fe40f1f2ba7d82e1055cd6c4e54ba12ded63202aaddd7449b1a5c607a3fc4\",\r\n          \"id\": \"did:vtn:trustid:103fe40f1f2ba7d82e1055cd6c4e54ba12ded63202aaddd7449b1a5c607a3fc4\",\r\n          \"publicKey\": \"-----BEGIN PUBLIC KEY-----\\r\\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA1EuUQmY7qE7lKw1w34Cu\\r\\nXmJ6Qxcx1wScqNxB/ht8DSMxNHBO0n3EPxzXzBcx5T64Rjf/w3HgrUer/jfb9wNg\\r\\nlaH6M5HlRO0GVbknOJgmLY9IDY6ob14XQG9dIFRjaiqvsXBSqKXD4K95j99Loe1t\\r\\nPYsKQuZBdRAULnSbTQug6s5CoAup8HLqlrwel4GncNywow1skOqjSgRyrB9aK1Hs\\r\\nFPwHiyaVy0U+xaHy/qEMMdORYErIo1+AKfpjUSGe9cladw6lBtNflMTWdpwluJNA\\r\\nOWWhhPEjuaEqcrcwafDnFQvBrxTL3IMNGa5ekjW2yA1bWLPDlmEsKWlqfD3bfp2j\\r\\n2wIDAQAB\\r\\n-----END PUBLIC KEY-----\\r\\n\"\r\n        },\r\n        \"type\": \"SignedBadge\"\r\n      }\r\n    },\r\n    \"public_evidences\": {\r\n      \"1\": {\r\n        \"evidenceHash\": \"faA/qRIJWgWuzrgjpSCu+CCchIE9TuG0M/Ao+FLXttA=\",\r\n        \"smartContract\": \"0x515C5BD935799b55ce43590a3A2a8F32fd564bd3\",\r\n        \"timestamp\": 1648032971,\r\n        \"transaction\": \"0x5b8502686cecb0579211b5827229e875c31966652b5633437ef3a05298a68e7f\"\r\n      },\r\n      \"2\": {\r\n        \"evidenceHash\": \"faA/qRIJWgWuzrgjpSCu+CCchIE9TuG0M/Ao+FLXttA=\",\r\n        \"smartContract\": \"0xfed137E31A2898000E837A48F9aE9C2e18d50eFb\",\r\n        \"timestamp\": 1648032327,\r\n        \"transaction\": \"0xe09867c9fb886a19db06d5f3e8405d5afcfeca548c718b7809f2db0a072c841b\"\r\n      },\r\n      \"3\": {\r\n        \"evidenceHash\": \"faA/qRIJWgWuzrgjpSCu+CCchIE9TuG0M/Ao+FLXttA=\",\r\n        \"smartContract\": \"0xCF7715Bd57C0538D7f03F23D42C5D7A76134584E\",\r\n        \"timestamp\": 1648032359,\r\n        \"transaction\": \"0x1b09df248ae5920327f7a45df7016ddd66d5b75b37e0a3c4ffbf53fe04fa646b\"\r\n      }\r\n    },\r\n    \"datetime\": \"2022-04-04 10:13:25 +0000 UTC\",\r\n    \"hfTxId\": \"7006502176e403042466ba63fd14c4bb18fad59a9447f377878974afb88f40f6\",\r\n    \"revoked\": true,\r\n    \"hash\": \"jhIjSJ3Xq22KAK79At2X14pCW4N77qdtog4B5eajhC8=\"\r\n  }\r\n}"
						}
					]
				},
				{
					"name": "Create a new certificate from customised content",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Cert1\",\n    \"description\": \"first certificate\",\n    \"content\": {},\n    \"public\": false,\n    \"readers\": [\"did:vtn:reader1\", \"did:vtn:reader2\"],\n    \"signers\": [\"did:vtn:signer1\", \"did:vtn:signer2\"]\n}"
						},
						"url": {
							"raw": "{{URL}}/certificate/content/create",
							"host": [
								"{{URL}}"
							],
							"path": [
								"certificate",
								"content",
								"create"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Certificate name\",\n    \"description\": \"Certificate short description\",\n    \"content\": \"<object>\",\n    \"public\": \"<bool>\",\n    \"readers\": \"<string>\",\n    \"signers\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/certificate/content/create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificate",
										"content",
										"create"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\r\n  \"output\": {\r\n    \"certID\": \"cert_1\",\r\n    \"data\": {\r\n      \"badge\": {\r\n        \"name\": \"\",\r\n        \"description\": \"\",\r\n        \"type\": \"cert_1\",\r\n        \"content\": {}\r\n      },\r\n      \"issuedOn\": \"2025-12-31T23:59:59+00:00\",\r\n      \"expires\": \"\",\r\n      \"verification\": {},\r\n      \"hash\": \"Bs2nFa30Ghu84uwBnjs2aOi53qe6r6YTpjk+o/HB2c=\"\r\n    },\r\n    \"metadata\": [\r\n      {\r\n        \"certID\": \"cert_1\",\r\n        \"type\": \"Signature/Revocation/Evidence\",\r\n        \"signatures\": {},\r\n        \"public_evidences\": {},\r\n        \"revoked\": false,\r\n        \"datetime\": \"1592568489\",\r\n        \"hfTxId\": \"3ae1d6b0f914aee4ce7105ddd65c4cf2dcf160ca398297a13032aaf33b50ed291\",\r\n        \"hash\": \"Ni7JYQG6GSmlEjWoRj2xrfF6ZVFhqBDPzyjk+o/HB2c=\"\r\n      }\r\n    ],\r\n    \"access\": {}\r\n  }\r\n}"
						}
					]
				},
				{
					"name": "Register evidences of a certificate in public network",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{URL}}/certificate/:certID/register",
							"host": [
								"{{URL}}"
							],
							"path": [
								"certificate",
								":certID",
								"register"
							],
							"variable": [
								{
									"key": "certID",
									"value": "prueba",
									"description": "(Required) Certificate ID"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"network\": \"Ethereum\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/certificate/:certID/register",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificate",
										":certID",
										"register"
									],
									"variable": [
										{
											"key": "certID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\r\n  \"output\": {\r\n    \"certID\": \"cert_1\",\r\n    \"type\": \"Signature/Revocation/Evidence/Adding signers\",\r\n    \"signatures\": {},\r\n    \"public_evidences\": {},\r\n    \"revoked\": false,\r\n    \"datetime\": \"1592568489\",\r\n    \"hfTxId\": \"3ae1d6b0f914aee4ce7105ddd65c4cf2dcf160ca398297a13032aaf33b50ed291\",\r\n    \"hash\": \"Ni7JYQG6GSmlEjWoRj2xrfF6ZVFhqBDPzyjk+o/HB2c=\"\r\n  }\r\n}"
						}
					]
				},
				{
					"name": "Get the history of a certificate",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/certificate/:certID/history",
							"host": [
								"{{URL}}"
							],
							"path": [
								"certificate",
								":certID",
								"history"
							],
							"variable": [
								{
									"key": "certID",
									"value": "prueba",
									"description": "(Required) Certificate ID"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/certificate/:certID/history",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificate",
										":certID",
										"history"
									],
									"variable": [
										{
											"key": "certID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "null"
						}
					]
				},
				{
					"name": "Get all certificates for a user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/certificates",
							"host": [
								"{{URL}}"
							],
							"path": [
								"certificates"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/certificates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificates"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"output\": {\n  \"certID\": \"exercitation mollit\"\n }\n}"
						}
					]
				},
				{
					"name": "Get providers register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/certificate/register/providers",
							"host": [
								"{{URL}}"
							],
							"path": [
								"certificate",
								"register",
								"providers"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Advanced methods",
			"item": [
				{
					"name": "Get the granted accesses for a certificate",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/certificate/:certID/access",
							"host": [
								"{{URL}}"
							],
							"path": [
								"certificate",
								":certID",
								"access"
							],
							"variable": [
								{
									"key": "certID",
									"value": "prueba",
									"description": "(Required) Certificate ID"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/certificate/:certID/access",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificate",
										":certID",
										"access"
									],
									"variable": [
										{
											"key": "certID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\r\n  \"output\": {\r\n    \"admin\": {\r\n      \"did:vtn:trustid:103fe40f1f2ba7d82e1055cd6c4e54ba12ded63202aaddd7449b1a5c607a3fc4\": 1\r\n    },\r\n    \"read\": {\r\n      \"did:vtn:user3\": 1,\r\n      \"did:vtn:user4\": 1\r\n    }\r\n  }\r\n}"
						}
					]
				},
				{
					"name": "Modify the access for a certificate",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"public\": false,\n    \"readers\": [\"did:vtn:reader3\", \"did:vtn:reader4\"]\n}"
						},
						"url": {
							"raw": "{{URL}}/certificate/:certID/access",
							"host": [
								"{{URL}}"
							],
							"path": [
								"certificate",
								":certID",
								"access"
							],
							"variable": [
								{
									"key": "certID",
									"value": "prueba",
									"description": "(Required) Certificate ID"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"public\": \"<bool>\",\n    \"readers\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/certificate/:certID/access",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificate",
										":certID",
										"access"
									],
									"variable": [
										{
											"key": "certID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\r\n  \"output\": {\r\n    \"admin\": {\r\n      \"did:vtn:trustid:103fe40f1f2ba7d82e1055cd6c4e54ba12ded63202aaddd7449b1a5c607a3fc4\": 1\r\n    },\r\n    \"read\": {\r\n      \"did:vtn:user1\": 1,\r\n      \"did:vtn:user2\": 1\r\n    }\r\n  }\r\n}"
						}
					]
				},
				{
					"name": "Get the signers and signatures for a certificate",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/certificate/:certID/signers",
							"host": [
								"{{URL}}"
							],
							"path": [
								"certificate",
								":certID",
								"signers"
							],
							"variable": [
								{
									"key": "certID",
									"value": "prueba",
									"description": "(Required) Certificate ID"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/certificate/:certID/signers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificate",
										":certID",
										"signers"
									],
									"variable": [
										{
											"key": "certID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"output\": {\n  \"did:vtn:signer1\": {},\n  \"did:vtn:signer2\": {}\n }\n}"
						}
					]
				},
				{
					"name": "Add new signers for a certificate",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"signers\":[\"did:vtn:signer3\", \"did:vtn:signer4\"]\n}"
						},
						"url": {
							"raw": "{{URL}}/certificate/:certID/signers/add",
							"host": [
								"{{URL}}"
							],
							"path": [
								"certificate",
								":certID",
								"signers",
								"add"
							],
							"variable": [
								{
									"key": "certID",
									"value": "prueba",
									"description": "(Required) Certificate ID"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"signers\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/certificate/:certID/signers/add",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificate",
										":certID",
										"signers",
										"add"
									],
									"variable": [
										{
											"key": "certID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\r\n  \"output\": {\r\n    \"type\": \"Adding signers\",\r\n    \"verification\": {\r\n      \"signers\": [\r\n        \"did:vtn:signer3\",\r\n        \"did:vtn:signer4\"\r\n      ],\r\n      \"type\": \"SignedBadge\"\r\n    },\r\n    \"signatures\": null,\r\n    \"public_evidences\": null,\r\n    \"datetime\": \"2022-04-04 10:43:23 +0000 UTC\",\r\n    \"hfTxId\": \"29093af6c98523b6fbd336be0a5e2b8ec934f5d008b935b66dc26bbf77709d69\",\r\n    \"revoked\": false,\r\n    \"hash\": \"FjdF5LDvYkB3bC72rBmtiZ6wtottfFfUDrJQBOGiddw=\"\r\n  }\r\n}"
						}
					]
				}
			]
		},
		{
			"name": "Advanced Signature",
			"item": [
				{
					"name": "Initialize advance signature",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"platform\": \"VIDSigner\",\n  \"signers\": [\n    {\n      \"email\": \"mail@mail.com\",\n      \"name\": \"Signer Test\",\n      \"did\": \"did:vtn:trustid:...\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/certificate/:cert/advancedsign/init",
							"host": [
								"{{URL}}"
							],
							"path": [
								"certificate",
								":cert",
								"advancedsign",
								"init"
							],
							"variable": [
								{
									"key": "cert",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/certificate/:certID/access",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificate",
										":certID",
										"access"
									],
									"variable": [
										{
											"key": "certID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "null"
						}
					]
				},
				{
					"name": "Get status of signed document",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"platform\": \"VIDSigner\",\n  \"signers\": [\n    {\n      \"email\": \"mail@mail.com\",\n      \"name\": \"Signer Test\",\n      \"did\": \"did:vtn:trustid:...\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/certificate/:cert/advancedsign/status",
							"host": [
								"{{URL}}"
							],
							"path": [
								"certificate",
								":cert",
								"advancedsign",
								"status"
							],
							"variable": [
								{
									"key": "cert",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/certificate/:certID/access",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificate",
										":certID",
										"access"
									],
									"variable": [
										{
											"key": "certID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "null"
						}
					]
				},
				{
					"name": "Get Signed document",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"platform\": \"VIDSigner\",\n  \"signers\": [\n    {\n      \"email\": \"mail@mail.com\",\n      \"name\": \"Signer Test\",\n      \"did\": \"did:vtn:trustid:...\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/certificate/:cert/advancedsign/document",
							"host": [
								"{{URL}}"
							],
							"path": [
								"certificate",
								":cert",
								"advancedsign",
								"document"
							],
							"variable": [
								{
									"key": "cert",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/certificate/:certID/access",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificate",
										":certID",
										"access"
									],
									"variable": [
										{
											"key": "certID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "null"
						}
					]
				},
				{
					"name": "Receive notifications from advanced signature",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/certificate/advancedsign/notification",
							"host": [
								"{{URL}}"
							],
							"path": [
								"certificate",
								"advancedsign",
								"notification"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/certificate/:certID/access",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"certificate",
										":certID",
										"access"
									],
									"variable": [
										{
											"key": "certID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "null"
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "URL",
			"value": "https://pro.virtualtrust.io/cert"
		},
		{
			"key": "authToken",
			"value": ""
		}
	]
}